{
    "swagger": "2.0",
    "info": {
        "description": "Описание протокола обмена сообщениями",
        "title": "Seal API",
        "contact": {},
        "version": "0.1"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh tokens",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.refreshTokenBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.JwtWithRefresh"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.JwtWithRefresh"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/custom": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get customs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom"
                ],
                "summary": "List custom",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.customList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "add custom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom"
                ],
                "summary": "Create custom",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/custom.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/custom.Custom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/custom/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "custom info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom"
                ],
                "summary": "Custom info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/custom.Custom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update custom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "custom"
                ],
                "summary": "Update custom",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/custom.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/custom.Custom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Custom delete",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "custom"
                ],
                "summary": "Custom delete",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get modems",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "List modem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.listModem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/shipping-ready": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get modems ready for shipping",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "List modem ready for shipping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.listModemShippingReady"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "modem info (by id or imei)",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "Modem info (by id or imei)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.modemSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update modem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "Update modem",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modem.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modem.Modem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/{id}/archive": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get modem archive",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "Archive modem",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order_desc",
                        "name": "order_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/modem.ArchiveModemData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/{id}/command": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "send command for modem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "Send command modem",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/modem.SendCommandRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/{id}/commands": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get modem commands",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "List modem commands",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.listModem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/{id}/log": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get modem packages log",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "Log modem",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order_desc",
                        "name": "order_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/modemLogRaw.ModemLogRaw"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/{id}/log-raw-telemetry": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get modem archive",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "Archive modem from raw log",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order_desc",
                        "name": "order_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/modem.ArchiveModemData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/modem/{id}/track": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get modem coordinates track",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "modem"
                ],
                "summary": "Track modem",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order_desc",
                        "name": "order_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/modem.TrackResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/route": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get routes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "summary": "List router",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.routeList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "add route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "summary": "Create route",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/route/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "route info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "summary": "Route info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "summary": "Update route",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/route.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "route delete",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "route"
                ],
                "summary": "Route delete",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/seal": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get seals",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "seal"
                ],
                "summary": "List seal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.listSeal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/seal-model": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get seal models",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "seal-model"
                ],
                "summary": "List seal models",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.sealModelList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/seal/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "seal info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "seal"
                ],
                "summary": "Seal info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/seal.Seal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update seal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seal"
                ],
                "summary": "Update seal",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seal.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/seal.Seal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/seal/{id}/archive": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get seal archive",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "seal"
                ],
                "summary": "Archive seal",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order_desc",
                        "name": "order_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sealData.SealData"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/secret-area": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get secret areas",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "secret-area"
                ],
                "summary": "List secret area",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.secretAreaList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "add secret area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "secret-area"
                ],
                "summary": "Create secret area",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_area.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_area.SecretArea"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/secret-area/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "secretArea info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "secret-area"
                ],
                "summary": "SecretArea info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_area.SecretArea"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update secret area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "secret-area"
                ],
                "summary": "Update secret area",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/secret_area.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_area.SecretArea"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "secret area delete",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "secret-area"
                ],
                "summary": "Secret area delete",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get shipping",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "List shipping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "0",
                                "1",
                                "2"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.shippingList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "add shipping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Create shipping",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shipping.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping-temp/{id}/files/{type}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "upload shipping files",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "shipping-temp"
                ],
                "summary": "Upload shipping files",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "upload files",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/modem/{imei}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get active shipping by modem imei",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Get active shipping by modem imei",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "imei",
                        "name": "imei",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "shipping info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Shipping info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update shipping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Update shipping",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shipping.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "shipping delete",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Shipping delete",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/coordinates": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "shipping coordinates",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Shipping coordinates",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order_desc",
                        "name": "order_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shipping.trackResponseCoordinate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/end": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "End shipping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "End shipping",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/files/{name}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "download shipping file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Download shipping file",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update shipping file info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Update shipping file info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shipping.UpdateFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete shipping file",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Delete shipping file",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/files/{type}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "upload shipping files",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Upload shipping files",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "seal_id",
                        "name": "seal_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "comment",
                        "name": "comment",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "upload files",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/modem/{imei}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "add modem to shipping (by id or imei)",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Add modem to shipping (by id or imei)",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "imei or id",
                        "name": "imei",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/route": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "shipping route info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Shipping route info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.Route"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/start": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Start shipping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Start shipping",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shipping.Shipping"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/shipping/{id}/telemetry": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "shipping telemetry",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "shipping"
                ],
                "summary": "Shipping telemetry",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "order_desc",
                        "name": "order_desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shipping.trackResponseTelemetry"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/transport": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get transports",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "List transports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.transportList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "add transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Create transport",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transport.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.Transport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/transport-type": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get transport types",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "transport-type"
                ],
                "summary": "List transport types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.transportTypeList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/transport/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "transport info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Transport info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.Transport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Update transport",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transport.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.Transport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "transport delete",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "transport"
                ],
                "summary": "Transport delete",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get users",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "find",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "description": "search type (0 - '=', 1 - 'like', 2 = 'ilike')",
                        "name": "find_type",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.userList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "add user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Db"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User info",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Db"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "User delete",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User delete",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transport.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app_error.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app_error.AppError": {
            "type": "object",
            "properties": {
                "err": {},
                "message": {}
            }
        },
        "custom.CreateRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "custom.Custom": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            }
        },
        "custom.UpdateRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "modem.ArchiveModemData": {
            "type": "object",
            "properties": {
                "altitude": {
                    "type": "integer"
                },
                "battery_level": {
                    "type": "integer"
                },
                "coordinate_lbs": {
                    "$ref": "#/definitions/modem.CoordinateLbs"
                },
                "dev_time": {
                    "type": "string"
                },
                "errors_flags": {
                    "type": "integer"
                },
                "latitude": {},
                "longitude": {},
                "positioning_time": {
                    "type": "string"
                },
                "reg_time": {
                    "type": "string"
                },
                "rssi": {
                    "type": "integer"
                },
                "satellites_count": {
                    "type": "integer"
                },
                "signal_glonass": {
                    "type": "integer"
                },
                "signal_gps": {
                    "type": "integer"
                },
                "speed": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "status_gps_module": {
                    "type": "integer"
                }
            }
        },
        "modem.Coordinate": {
            "type": "object",
            "properties": {
                "altitude": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "hdop": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "min_distance_to_route": {
                    "type": "integer"
                },
                "satellites_count": {
                    "type": "integer"
                },
                "signal_glonass": {
                    "type": "integer"
                },
                "signal_gps": {
                    "type": "integer"
                },
                "speed": {
                    "type": "integer"
                },
                "status_gps_module": {
                    "type": "integer"
                }
            }
        },
        "modem.CoordinateLbs": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "positioning_time": {
                    "type": "string"
                },
                "precision": {
                    "type": "integer"
                }
            }
        },
        "modem.Data": {
            "type": "object",
            "properties": {
                "altitude": {
                    "type": "integer"
                },
                "band": {
                    "type": "integer"
                },
                "battery_level": {
                    "type": "integer"
                },
                "battery_level_min": {
                    "type": "integer"
                },
                "battery_voltage": {},
                "battery_voltage_min": {},
                "connect_period": {
                    "type": "integer"
                },
                "coordinate_lbs": {
                    "$ref": "#/definitions/modem.CoordinateLbs"
                },
                "coordinates_period": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "errors_flags": {
                    "type": "integer"
                },
                "hdop": {
                    "type": "integer"
                },
                "iccid": {
                    "type": "string"
                },
                "latitude": {},
                "longitude": {},
                "low_power_timeout": {
                    "type": "integer"
                },
                "max_reg_time": {
                    "type": "integer"
                },
                "max_session_time": {
                    "type": "integer"
                },
                "model": {
                    "type": "integer"
                },
                "modem": {
                    "type": "integer"
                },
                "modem_errors_code": {
                    "type": "integer"
                },
                "network": {
                    "type": "integer"
                },
                "positioning_time": {
                    "type": "string"
                },
                "protocol": {
                    "type": "integer"
                },
                "reg_time": {
                    "type": "string"
                },
                "retries_count": {
                    "type": "integer"
                },
                "rsrp": {
                    "type": "integer"
                },
                "rsrq": {
                    "type": "integer"
                },
                "rssi": {
                    "type": "integer"
                },
                "satellites_count": {
                    "type": "integer"
                },
                "satellites_search_period": {
                    "type": "integer"
                },
                "seal_connect_period": {
                    "type": "integer"
                },
                "sensitivity_accelerometer": {
                    "type": "integer"
                },
                "sessions_count": {
                    "type": "integer"
                },
                "signal_glonass": {
                    "type": "integer"
                },
                "signal_gps": {
                    "type": "integer"
                },
                "snr": {
                    "type": "integer"
                },
                "speed": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "status_gps_module": {
                    "type": "integer"
                },
                "status_raw": {
                    "type": "integer"
                },
                "temperature": {},
                "timezone": {
                    "type": "integer"
                }
            }
        },
        "modem.Extra": {
            "type": "object",
            "properties": {
                "apn": {
                    "type": "string"
                },
                "dns_1": {
                    "type": "string"
                },
                "dns_2": {
                    "type": "string"
                },
                "gps_revision": {
                    "type": "string"
                },
                "hardware_revision": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "list_operators": {
                    "type": "string"
                },
                "modem_revision": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "rf_revision": {
                    "type": "string"
                },
                "software_version": {
                    "type": "string"
                },
                "updated_time": {
                    "type": "string"
                }
            }
        },
        "modem.Modem": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "extra": {
                    "$ref": "#/definitions/modem.Extra"
                },
                "iccid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imei": {
                    "type": "string"
                },
                "last": {
                    "$ref": "#/definitions/modem.Data"
                },
                "last_charge_time": {
                    "type": "string"
                },
                "last_coordinate": {
                    "$ref": "#/definitions/modem.Coordinate"
                },
                "last_dev_time": {
                    "type": "string"
                },
                "msisdn": {
                    "type": "string"
                },
                "seals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modem.Seal"
                    }
                },
                "serial": {
                    "type": "integer"
                }
            }
        },
        "modem.ModemForList": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "hardware_revision": {
                    "type": "string"
                },
                "iccid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imei": {
                    "type": "string"
                },
                "last": {
                    "$ref": "#/definitions/modem.lastForList"
                },
                "last_coordinate": {
                    "$ref": "#/definitions/modem.coordinateForList"
                },
                "last_dev_time": {
                    "type": "string"
                },
                "serial": {
                    "type": "integer"
                },
                "software_version": {
                    "type": "string"
                }
            }
        },
        "modem.ModemForListShippingReady": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "seals": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "last": {
                                "type": "object",
                                "properties": {
                                    "battery_level": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "serial": {}
                        }
                    }
                },
                "serial": {}
            }
        },
        "modem.Seal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last": {
                    "$ref": "#/definitions/modem.SealData"
                },
                "serial": {
                    "type": "integer"
                }
            }
        },
        "modem.SealData": {
            "type": "object",
            "properties": {
                "battery_level": {
                    "type": "integer"
                },
                "build_version": {
                    "type": "integer"
                },
                "count_commands_in_queue": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "rssi": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "temperature": {
                    "type": "integer"
                }
            }
        },
        "modem.SendCommandRequest": {
            "type": "object",
            "required": [
                "name",
                "params"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                },
                "params": {}
            }
        },
        "modem.TrackResponse": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modem.Coordinate"
                    }
                }
            }
        },
        "modem.UpdateRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "modem.coordinateForList": {
            "type": "object",
            "properties": {
                "dev_time": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "modem.lastForList": {
            "type": "object",
            "properties": {
                "battery_level": {
                    "type": "integer"
                },
                "build_version": {
                    "type": "integer"
                },
                "connect_period": {
                    "type": "integer"
                },
                "errors_flags": {
                    "type": "integer"
                },
                "reg_time": {
                    "type": "string"
                },
                "rssi": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "modemLogRaw.ModemLogRaw": {
            "type": "object",
            "properties": {
                "cmd_description": {
                    "type": "string"
                },
                "cmd_name": {
                    "type": "string"
                },
                "hex": {
                    "type": "string"
                },
                "imei": {
                    "type": "integer"
                },
                "payload": {},
                "reg_time": {
                    "type": "string"
                },
                "remote_port": {
                    "type": "integer"
                },
                "src": {
                    "type": "integer"
                }
            }
        },
        "route.CreateRequest": {
            "type": "object",
            "required": [
                "points",
                "title"
            ],
            "properties": {
                "coords": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "length": {
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "points": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "travel_time": {
                    "type": "integer"
                }
            }
        },
        "route.Route": {
            "type": "object",
            "properties": {
                "coords": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "integer"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "travel_time": {
                    "type": "integer"
                }
            }
        },
        "route.UpdateRequest": {
            "type": "object",
            "properties": {
                "length": {
                    "type": "integer"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "travel_time": {
                    "type": "integer"
                }
            }
        },
        "seal.Data": {
            "type": "object",
            "properties": {
                "battery_level": {
                    "type": "integer"
                },
                "build_version": {
                    "type": "integer"
                },
                "count_commands_in_queue": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "errors": {
                    "type": "integer"
                },
                "modem": {
                    "type": "integer"
                },
                "modem_time": {
                    "type": "string"
                },
                "rssi": {
                    "type": "integer"
                },
                "seal": {
                    "type": "integer"
                },
                "sensitivity_cable": {
                    "type": "integer"
                },
                "sensitivity_range": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "temperature": {
                    "type": "integer"
                }
            }
        },
        "seal.Modem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last": {
                    "$ref": "#/definitions/seal.ModemData"
                },
                "linked": {
                    "description": "TODO delete later",
                    "type": "boolean"
                },
                "serial": {
                    "type": "integer"
                }
            }
        },
        "seal.ModemData": {
            "type": "object",
            "properties": {
                "altitude": {
                    "type": "integer"
                },
                "band": {
                    "type": "integer"
                },
                "battery_level": {
                    "type": "integer"
                },
                "battery_level_min": {
                    "type": "integer"
                },
                "battery_voltage": {},
                "battery_voltage_min": {},
                "connect_period": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "iccid": {
                    "type": "string"
                },
                "latitude": {},
                "longitude": {},
                "max_reg_time": {
                    "type": "integer"
                },
                "max_session_time": {
                    "type": "integer"
                },
                "model": {
                    "type": "integer"
                },
                "modem": {
                    "type": "integer"
                },
                "modem_errors_code": {
                    "type": "integer"
                },
                "network": {
                    "type": "integer"
                },
                "positioning_time": {
                    "type": "string"
                },
                "protocol": {
                    "type": "integer"
                },
                "reg_time": {
                    "type": "string"
                },
                "retries_count": {
                    "type": "integer"
                },
                "rspr": {
                    "type": "integer"
                },
                "rsrq": {
                    "type": "integer"
                },
                "rssi": {
                    "type": "integer"
                },
                "satellite_search_period": {
                    "type": "integer"
                },
                "satellites_count": {
                    "type": "integer"
                },
                "seal_connect_period": {
                    "type": "integer"
                },
                "sessions_count": {
                    "type": "integer"
                },
                "snr": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "status_raw": {
                    "type": "integer"
                },
                "temperature": {},
                "timezone": {
                    "type": "integer"
                }
            }
        },
        "seal.Seal": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last": {
                    "$ref": "#/definitions/seal.Data"
                },
                "modems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/seal.Modem"
                    }
                },
                "serial": {
                    "type": "integer"
                }
            }
        },
        "seal.SealForList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "last": {
                    "$ref": "#/definitions/seal.lastForList"
                },
                "modems": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "serial": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "serial": {}
            }
        },
        "seal.UpdateRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "seal.lastForList": {
            "type": "object",
            "properties": {
                "battery_level": {
                    "type": "integer"
                },
                "build_version": {
                    "type": "integer"
                },
                "count_commands_in_queue": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "rssi": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "temperature": {
                    "type": "integer"
                }
            }
        },
        "sealData.SealData": {
            "type": "object",
            "properties": {
                "battery_level": {
                    "type": "integer"
                },
                "build_version": {
                    "type": "integer"
                },
                "count_commands_in_queue": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "errors": {
                    "type": "integer"
                },
                "errors_raw": {
                    "type": "integer"
                },
                "modem": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "serial": {
                            "type": "integer"
                        }
                    }
                },
                "rssi": {
                    "type": "integer"
                },
                "sensitivity_cable": {
                    "type": "integer"
                },
                "sensitivity_range": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "status_raw": {
                    "description": "ModemData            modemData.ModemData `json:\"modem_data\" db:\"modem_data\"`",
                    "type": "integer"
                },
                "temperature": {
                    "type": "integer"
                }
            }
        },
        "seal_model.SealModel": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                }
            }
        },
        "secret_area.CreateRequest": {
            "type": "object",
            "required": [
                "area",
                "title"
            ],
            "properties": {
                "area": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 127
                },
                "title": {
                    "type": "string",
                    "maxLength": 127,
                    "minLength": 5
                }
            }
        },
        "secret_area.SecretArea": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "author": {
                    "$ref": "#/definitions/user.Author"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "secret_area.UpdateRequest": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 127
                },
                "title": {
                    "type": "string",
                    "maxLength": 127
                }
            }
        },
        "shipping.CreateRequest": {
            "type": "object",
            "required": [
                "create_date",
                "custom_number",
                "number",
                "route",
                "transport"
            ],
            "properties": {
                "create_date": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                },
                "custom_number": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 8
                },
                "number": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1
                },
                "route": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1
                },
                "transport": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1
                }
            }
        },
        "shipping.File": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seal_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "shipping.Shipping": {
            "type": "object",
            "required": [
                "create_date",
                "custom_number",
                "number",
                "route",
                "transport"
            ],
            "properties": {
                "author": {
                    "$ref": "#/definitions/user.Author"
                },
                "create_date": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                },
                "created_at": {
                    "type": "string"
                },
                "custom_number": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 8
                },
                "estimated_arrival_time": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/shipping.File"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "modem": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "imei": {
                            "type": "integer"
                        },
                        "last": {
                            "type": "object",
                            "properties": {
                                "battery_level": {
                                    "type": "integer"
                                },
                                "rssi": {
                                    "type": "integer"
                                },
                                "status": {
                                    "type": "integer"
                                }
                            }
                        },
                        "serial": {
                            "type": "integer"
                        }
                    }
                },
                "number": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1
                },
                "route": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "length": {
                            "type": "integer"
                        },
                        "points": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "title": {
                            "type": "string"
                        },
                        "travel_time": {
                            "type": "integer"
                        }
                    }
                },
                "seals": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "last": {
                                "type": "object",
                                "properties": {
                                    "battery_level": {
                                        "type": "integer"
                                    },
                                    "rssi": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "serial": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "maximum": 2,
                    "minimum": 0
                },
                "time_end": {
                    "type": "string"
                },
                "time_start": {
                    "type": "string"
                },
                "transport": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "registration_number": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "type": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "shipping.UpdateFileRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "seal_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "shipping.UpdateRequest": {
            "type": "object",
            "properties": {
                "create_date": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 0
                },
                "custom_number": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 0
                },
                "number": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "route": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "transport": {
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                }
            }
        },
        "shipping.trackResponseCoordinate": {
            "type": "object",
            "properties": {
                "dev_time": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "min_distance_to_route": {
                    "description": "Altitude  int32     `json:\"altitude\"`",
                    "type": "integer"
                }
            }
        },
        "shipping.trackResponseSeal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                }
            }
        },
        "shipping.trackResponseSealData": {
            "type": "object",
            "properties": {
                "battery_level": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "errors": {
                    "type": "integer"
                },
                "seal": {
                    "$ref": "#/definitions/shipping.trackResponseSeal"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "shipping.trackResponseTelemetry": {
            "type": "object",
            "properties": {
                "altitude": {
                    "type": "integer"
                },
                "dev_time": {
                    "type": "string"
                },
                "errors_flags": {
                    "type": "integer"
                },
                "latitude": {},
                "longitude": {},
                "sealsData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/shipping.trackResponseSealData"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "transport.CreateRequest": {
            "type": "object",
            "required": [
                "title",
                "type"
            ],
            "properties": {
                "registration_number": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                },
                "type": {
                    "type": "integer",
                    "maximum": 3,
                    "minimum": 1
                }
            }
        },
        "transport.DeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "transport.JwtWithRefresh": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "transport.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "transport.Transport": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/user.Author"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "registration_number": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/transport_type.TransportType"
                }
            }
        },
        "transport.UpdateRequest": {
            "type": "object",
            "properties": {
                "registration_number": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 50
                },
                "type": {
                    "type": "integer",
                    "maximum": 3
                }
            }
        },
        "transport_type.TransportType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "user.Author": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "user.Db": {
            "type": "object",
            "required": [
                "login",
                "password",
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "integer"
                },
                "title": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "v1.Auth": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "v1.customList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/custom.Custom"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.listModem": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modem.ModemForList"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.listModemShippingReady": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modem.ModemForListShippingReady"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.listSeal": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/seal.SealForList"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.modemSwagger": {
            "type": "object",
            "properties": {
                "extra": {
                    "$ref": "#/definitions/modem.Extra"
                },
                "iccid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imei": {
                    "type": "string"
                },
                "last": {
                    "$ref": "#/definitions/modem.Data"
                },
                "last_dev_time": {
                    "type": "string"
                },
                "seals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/modem.Seal"
                    }
                },
                "serial": {
                    "type": "integer"
                }
            }
        },
        "v1.refreshTokenBody": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 10
                }
            }
        },
        "v1.routeList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/route.Route"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.sealModelList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/seal_model.SealModel"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.secretAreaList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/secret_area.SecretArea"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.shippingList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/shipping.Shipping"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.transportList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transport.Transport"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.transportTypeList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transport_type.TransportType"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        },
        "v1.userList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.User"
                    }
                },
                "records_filtered": {
                    "type": "integer"
                },
                "records_total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}